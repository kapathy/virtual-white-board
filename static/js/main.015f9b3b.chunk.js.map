{"version":3,"sources":["svgs/user.svg","svgs/settings.svg","config/firebase.js","contexts/Auth.js","components/Post/Post.js","components/Board/Board.js","components/Header/Header.js","components/ColorPicker/ColorPicker.js","components/WhiteBoard/WhiteBoard.js","components/TypeWriter/TypeWriter.js","components/Home/Home.js","components/SignIn/SignIn.js","components/SignUp/SignUp.js","App.js","index.js"],"names":["module","exports","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","initializeApp","this","auth","db","firestore","email","password","signInWithEmailAndPassword","firstname","lastname","username","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","signOut","user","onAuthStateChanged","date","value","color","collection","add","AuthContext","React","createContext","AuthProvider","children","useState","setCurrentUser","useEffect","app","authChange","Provider","Post","id","text","handleDeletePost","authUser","useContext","className","style","backgroundColor","onClick","Board","posts","map","post","key","Header","props","clicked","setClicked","src","UserIcon","alt","firebase","signout","then","history","push","catch","err","alert","ColorPicker","setColor","changeColor","setPostColor","SettingsIcon","WhiteBoard","setPosts","setValue","onSnapshot","snapshot","newPosts","docs","doc","data","handleSubmit","e","preventDefault","Date","toLocaleString","addPost","onSubmit","maxLength","type","placeholder","onChange","target","console","log","delete","error","splice","TypeWriter","content","start","setContent","length","delay","setTimeout","clearTimeout","Home","SignIn","setEmail","setPassword","signin","autoComplete","SignUp","setFirstname","setLastname","setUsername","a","signup","message","onSignUp","exact","path","component","require","config","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.015f9b3b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.adb77b20.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.5735b15d.svg\";","import App from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firebase-firestore'\n\nvar firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: \"virtual-white-board.firebaseapp.com\",\n    databaseURL: \"https://virtual-white-board.firebaseio.com\",\n    projectId: \"virtual-white-board\",\n    storageBucket: \"virtual-white-board.appspot.com\",\n    messagingSenderId: \"562326485518\",\n    appId: \"1:562326485518:web:e4a87a852c7897c9d79a5f\",\n    measurementId: \"G-CWBQGTRF8M\"\n};\n\n/**\n* Firebase initialisation and methods.\n*/\nclass Firebase {\n    constructor() {\n        App.initializeApp(firebaseConfig);\n        this.auth = App.auth();\n        this.db = App.firestore();\n    }\n\n    /**\n    * Method to sign in.\n    * @param {String} email \n    * @param {String} password \n    */\n    signin(email, password) {\n        return this.auth.signInWithEmailAndPassword(email, password);\n    }\n\n    /**\n    * Method to sign in.\n    * @param {String} firstname \n    * @param {String} lastname \n    * @param {String} username \n    * @param {String} email \n    * @param {String} password \n    */\n    async signup(firstname, lastname, username, email, password) {\n        await this.auth.createUserWithEmailAndPassword(email, password);\n        return this.auth.currentUser.updateProfile({\n            displayName: username\n        });\n    }\n\n    /**\n    * Method to sign out.\n    */\n    signout() {\n        return this.auth.signOut();\n    }\n\n    /**\n    * Method that returns the user who is logged in.\n    */\n    getUser() {\n        return this.auth.currentUser();\n    }\n\n    /**\n    * Method that updates when user changes.\n    */\n    authChange(user) {\n        return this.auth.onAuthStateChanged(user);\n    }\n\n    /**\n    * Method to add a post to the database.\n    */\n    addPost(date, value, user, color) {\n        this.db.collection('posts').add({ date, value, user, color });\n    }\n\n}\n\nexport default new Firebase();\n","import React, { useEffect, useState } from \"react\";\nimport app from \"../config/firebase\";\n\nexport const AuthContext = React.createContext();\n\n/**\n* Authprovider manages the authentication staus of the application. \n* When user is signed in the app the user is set.\n*/\n\nexport const AuthProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    useEffect(() => {\n        app.authChange(setCurrentUser);\n    }, []);\n\n    return (\n        <AuthContext.Provider\n            value={{\n                currentUser\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    );\n};","import React, { useContext } from 'react';\nimport './Post.css';\nimport { AuthContext } from \"../../contexts/Auth\"\n\n/**\n* Component responisble of rendering a Post.\n* Using the Auth context to ensure that user logged in can only delete their own posts.\n* @param {String} id - user id.\n* @param {String} text - message/text on the post\n* @param {function} handleDeletePost - method to delete a post.\n* @param {String} username - username of the user who is signed in.\n* @param {String} date - date that the post was posted\n* @param {String} color - post color\n*/\n\nexport default function Post({\n    id,\n    text,\n    handleDeletePost,\n    username,\n    date,\n    color,\n\n}) {\n\n    const { currentUser } = useContext(AuthContext);\n    const authUser = currentUser.displayName\n\n    return (\n\n        <div className=\"post\" style={{ backgroundColor: color }}>\n            <p className=\"message\">{text}</p>\n            {username === authUser ? <button className=\"delete\" onClick={() => handleDeletePost(id)}>X</button> : \"\"}\n            <div className=\"postInfo\">\n                <p className=\"username\"> @{username}</p>\n                <p className=\"date\">{date}</p>\n            </div>\n        </div >\n    );\n}\n\n","import React from 'react';\nimport './Board.css';\nimport Post from '../Post/Post';\n\n/**\n* Maps over all posts and returns a {@link Post} component for each.\n* @param {array} posts - Array containing all posts.\n* @param {function} handleDeletePost - Method to delete a single post.\n*/\n\nexport default function Board({\n    posts,\n    handleDeletePost\n}) {\n    return (\n        <div className=\"board\">\n            {posts.map((post, id) => (\n                <Post\n                    key={post.id}\n                    id={id}\n                    text={post.value}\n                    handleDeletePost={handleDeletePost}\n                    username={post.user}\n                    date={post.date}\n                    color={post.color}\n                />\n            ))}\n        </div>\n    );\n\n\n}\n\n\n","import React, { useState } from 'react';\nimport './Header.css';\nimport firebase from '../../config/firebase';\nimport UserIcon from '../../svgs/user.svg';\n\n/**\n* Component responisble of rendering the header.\n* @param posts\n* @param {String} username - Username of the user who is signed in.\n*/\n\nexport default function Header({ props, username }) {\n\n    const [clicked, setClicked] = useState(false);\n\n    /**\n    * When user signs out call firebase to ensure sign out, and push the user to the {@link Home} component.\n    */\n    const handleSignOut = () => {\n        firebase.signout()\n            .then(props.history.push('/'))\n            .catch(err => {\n                alert(err);\n            });\n    };\n\n    /**\n    * When user clicks on their username toggle click\n    * When clicked is true sign out button is displayed.\n    */\n    const handleClick = () => {\n        { clicked ? setClicked(false) : setClicked(true) }\n    }\n\n    return (\n        <div>\n            <div className=\"header\">\n                <div className=\"user\" onClick={handleClick} >{username}</div>\n                <img className=\"usericon\" src={UserIcon} alt=\"User Icon\" />\n            </div>\n            <div className=\"signoutContainer\">\n                {clicked ? <button className=\"signout\" onClick={handleSignOut}>Sign Out</button> : <div></div>}\n            </div>\n            <h1 className=\"name\">Virtual Whiteboard</h1>\n        </div>\n    );\n}\n\n\n\n\n","import React, { useState } from 'react';\nimport './ColorPicker.css';\nimport SettingsIcon from '../../svgs/settings.svg';\n\n/**\n* Component that allows users to switch the color of a post to be posted.\n* @param props \n*/\n\nfunction ColorPicker(props) {\n\n    const [color, setColor] = useState(\"#a3b2a5\");\n\n    /**\n    * When users has choosen a color this method will set the state in this component, \n    * and return the same to the parent component.\n    * @param {string} color - The color that the user has selected.\n    */\n\n    const changeColor = (color) => {\n        setColor(color);\n        props.setPostColor(color);\n    }\n\n    return (\n        <div className=\"dropdown\">\n            <button className=\"dropbtn\" style={{ backgroundColor: color }}>\n                <img className=\"settingsIcon\" src={SettingsIcon} alt=\"Settings Icon\" style={{ color: color }} />\n            </button>\n            <div className=\"dropdown-content\">\n                <div onClick={() => { changeColor(\"#c3ccd6\") }}></div>\n                <div onClick={() => { changeColor(\"#a3b2a5\") }}></div>\n                <div onClick={() => { changeColor(\"#d9c8d5\") }}></div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default ColorPicker;\n","import React, { useState, useContext, useEffect } from 'react';\nimport './WhiteBoard.css';\nimport { AuthContext } from \"../../contexts/Auth\"\nimport Board from '../Board/Board';\nimport Header from '../Header/Header';\nimport firebase from '../../config/firebase'\nimport ColorPicker from '../ColorPicker/ColorPicker';\n\n/**\n* Puts together the main compoents for the entire whiteboard screen.\n* Renderes the {@link Header}, {@link ColorPicker} and {@link Board} components.\n* @param props \n*/\n\nfunction WhiteBoard(props) {\n    const [posts, setPosts] = useState([]);\n    const [value, setValue] = useState(\"\");\n    const [color, setColor] = useState(\"#a3b2a5\");\n\n    const { currentUser } = useContext(AuthContext);\n\n    /**\n    * Requests the posts data from the database.\n    */\n    useEffect(() => {\n        firebase.db.collection('posts').onSnapshot((snapshot) => {\n            const newPosts = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data()\n            }));\n            setPosts(newPosts);\n        })\n    }, [])\n\n    /**\n    * Handles deletion of a post.\n    * @param {String} id - id (index) of the post to be deleted.\n    */\n    const handleDeletePost = (id) => {\n        const key = posts[id].id;\n        console.log(key);\n        firebase.db.collection(\"posts\").doc(key).delete().then(function () {\n            console.log(\"Document successfully deleted!\");\n        }).catch(function (error) {\n            console.error(\"Error removing document: \", error);\n        });\n        const newPosts = [...posts];\n        newPosts.splice(id, 1);\n        setPosts(newPosts);\n    };\n\n    /**\n    * Receives the color of the post from child {@link ColorPicker} component. \n    * @param {String} data - color code recieved.\n    */\n    const getColor = (data) => {\n        setColor(data);\n    };\n\n    /**\n    * Adds a post to the database.\n    * @param {String} text - message to be posted.\n    */\n    const addPost = text => {\n        const date = new Date().toLocaleString();\n        firebase.addPost(date, text, currentUser.displayName, color);\n        const newPosts = [...posts, { text }];\n        setPosts(newPosts);\n    };\n\n    /**\n    * Calls the addPost method to add the post and clears the input field. \n    * @param {event} e - when user clicks button.\n    */\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (!value) return;\n        addPost(value);\n        setValue(\"\");\n    };\n\n    if (currentUser !== null) {\n        const user = currentUser.displayName\n        return (\n            <div className=\"App\">\n                <Header props={props} username={user} />\n                <div className=\"inputContainer\">\n                    <form onSubmit={handleSubmit}>\n                        <input\n                            maxLength=\"280\"\n                            type=\"text\"\n                            className=\"input\"\n                            placeholder=\"write your message here...\"\n                            value={value}\n                            onChange={e => setValue(e.target.value)}\n                        />\n                    </form>\n                </div>\n                <div className=\"inputContainer marginFix\">\n                    <ColorPicker setPostColor={getColor} />\n                    <button className=\"postButton\" onClick={handleSubmit}>post</button>\n                </div>\n                <Board\n                    posts={posts}\n                    handleDeletePost={handleDeletePost}\n                />\n            </div>\n        )\n    }\n    return (\n        <div id=\"showMe\">Sign In to use the whiteboard!</div>\n    );\n}\n\nexport default WhiteBoard;\n","import React, { useState, useEffect } from 'react';\nimport './TypeWriter.css';\n\n/**\n* Adds one character to content at a time, so that each character is typed with a delay.\n* Rendered in the {@link Home} component.\n* @param {String} text - Text to be typed\n*/\n\nconst TypeWriter = ({ text }) => {\n\n    const [{ content, start }, setContent] = useState({ content: '', start: 0 })\n\n    useEffect(() => {\n        if (start === text.length) return\n        const delay = setTimeout(() => {\n            setContent({ content: content + text[start], start: start + 1 })\n            clearTimeout(delay)\n        }, 100)\n    }, [content])\n\n    return <span className=\"typewriter\">{content}<span className=\"cursor\">|</span></span>\n}\n\nexport default TypeWriter;\n","import React from 'react';\nimport TypeWriter from '../TypeWriter/TypeWriter';\nimport './Home.css';\n\nconst text = \"A quick and fun way to communicate with your team!\"\n\n/**\n* Renders the Home component (Screen before sign in/sign up).\n* When clicking on sign in or sign on buttons, users is pushed forward to {@link SignIn} or {@link SignUp} components.\n* Also renders the {@link TypeWriter} component.\n* @param props\n*/\n\nfunction Home(props) {\n    return (\n        <div className=\"App\">\n            <div className=\"homeOptions\">\n                <h1 className=\"title\">Virtual Whiteboard</h1>\n                <button className=\"signButton\" onClick={() => { props.history.push('./signin') }}>Sign In</button>\n                <button className=\"signButton\" onClick={() => { props.history.push('./signup') }}>Sign Up</button>\n                <TypeWriter {...{ text }} />\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","import React, { useState } from 'react';\nimport firebase from '../../config/firebase'\n\n/**\n* Component responisble of rendering Sign In form.\n* @param props\n*/\n\nfunction SignIn(props) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    /**\n    * Handles sign in when user clicks button and pushes user to {@link WhiteBoard} component.\n    * @param {event} e - event fired when clicking button.\n    */\n    const handleSignIn = e => {\n        e.preventDefault();\n        firebase\n            .signin(email, password)\n            .then(props.history.push(\"/whiteboard\"))\n            .catch(err => alert(err));\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Virtual Whiteboard</h1>\n            <form className=\"signinForm\" onSubmit={handleSignIn}>\n                <input\n                    type=\"text\"\n                    className=\"input sign\"\n                    placeholder=\"E-mail\"\n                    onChange={e => setEmail(e.target.value)}\n                    autoComplete=\"off\"\n                />\n                <input\n                    type=\"password\"\n                    className=\"input sign\"\n                    placeholder=\"password\"\n                    onChange={e => setPassword(e.target.value)}\n                    autoComplete=\"off\"\n                />\n                <div className=\"container\">\n                    <button className=\"button continue\">Continue</button>\n                </div>\n            </form>\n        </div >\n    );\n};\n\nexport default SignIn;\n","import React, { useState } from 'react';\nimport './SignUp.css';\nimport firebase from '../../config/firebase'\n\n/**\n* Component responisble of rendering Sign Up form.\n* @param props\n*/\n\nfunction SignUp(props) {\n    const [firstname, setFirstname] = useState(\"\");\n    const [lastname, setLastname] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    /**\n    * Handles sign up when user clicks button.\n    * @param {event} e - event fired when clicking button.\n    */\n\n    const handleSignUp = e => {\n        e.preventDefault();\n        onSignUp();\n    };\n\n    /**\n    * Handles sign up when user clicks button and pushes user to {@link WhiteBoard} component.\n    * @param {event} e - event fired when clicking button.\n    */\n\n    async function onSignUp() {\n        try {\n            firebase.signup(firstname, lastname, username, email, password);\n            props.history.push('./whiteboard');\n        } catch (err) {\n            alert(err.message);\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            <h1>Virtual Whiteboard</h1>\n            <form className=\"signupForm\" onSubmit={handleSignUp}>\n                <input\n                    type=\"text\"\n                    className=\"input sign\"\n                    placeholder=\"First Name\"\n                    onChange={e => setFirstname(e.target.value)}\n                    autoComplete=\"off\"\n                />\n                <input\n                    type=\"text\"\n                    className=\"input sign\"\n                    placeholder=\"Last Name\"\n                    onChange={e => setLastname(e.target.value)}\n                    autoComplete=\"off\"\n                />\n                <input\n                    type=\"text\"\n                    className=\"input sign\"\n                    placeholder=\"Username\"\n                    onChange={e => setUsername(e.target.value)}\n                    autoComplete=\"off\"\n                />\n                <input\n                    type=\"text\"\n                    className=\"input sign\"\n                    placeholder=\"E-mail\"\n                    onChange={e => setEmail(e.target.value)}\n                    autoComplete=\"off\"\n                />\n                <input\n                    type=\"password\"\n                    className=\"input sign\"\n                    placeholder=\"password\"\n                    onChange={e => setPassword(e.target.value)}\n                    autoComplete=\"off\"\n                />\n                <div className=\"container\">\n                    <button className=\"button continue\">Continue</button>\n                </div>\n\n            </form>\n\n        </div >\n    );\n}\nexport default SignUp;\n","import React from 'react';\nimport './style.css';\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport { AuthProvider } from './contexts/Auth';\nimport WhiteBoard from './components/WhiteBoard/WhiteBoard';\nimport Home from './components/Home/Home';\nimport SignIn from './components/SignIn/SignIn';\nimport SignUp from './components/SignUp/SignUp';\n\n\n/**\n* Contains the routes for the four main components.\n* Authentication Provider wraps the Routes.\n*/\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <Route exact path='/' component={Home} />\n        <Route exact path='/whiteboard' component={WhiteBoard} />\n        <Route exact path='/signin' component={SignIn} />\n        <Route exact path='/signup' component={SignUp} />\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nrequire('dotenv').config();\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}